name: cicd

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: rkochar/wsdm

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: update-semantic-version
        id: versioning
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          branch: main
          tag_prefix: "v"
          major_pattern: "breaking:"
          minor_pattern: "feature:"
          version_format: "${major}.${minor}.${patch}"
    
      - name: tag-code
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ steps.versioning.outputs.version_tag }}
          skipIfReleaseExists: true 
      
      - name: login-container-registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # TODO: This can probably use the matrix strategy.
      - name: check-if-deployment-is-needed
        id: check-changes
        uses: dorny/paths-filter@v2.11.1
        with:
          filters: |
            stock:
              - 'src/stock/*.go'
            order:
              - 'src/order/*.go'
            payment:
              - 'src/payment/*.go'
            lockmaster:
              - 'src/lockmaster/*.go'
            api-gateway:
              - 'src/api-gateway/*.go'
            shared:
              - 'src/shared/**'

      - name: stock-release-image
        if: steps.check-changes.outputs.stock == 'true' || steps.check-changes.outputs.shared == 'true'
        id: stock-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          build-args: |
            SERVICE=stock
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/stock:latest
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/stock:${{ steps.versioning.outputs.version_tag }}

      - name: order-release-image
        if: steps.check-changes.outputs.order == 'true' || steps.check-changes.outputs.shared == 'true'
        id: order-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          build-args: |
            SERVICE=order
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/order:latest
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/order:${{ steps.versioning.outputs.version_tag }}
  
      - name: payment-release-image
        if: steps.check-changes.outputs.payment == 'true' || steps.check-changes.outputs.shared == 'true'
        id: payment-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          build-args: |
            SERVICE=payment
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/payment:latest
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/payment:${{ steps.versioning.outputs.version_tag }}

      - name: lockmaster-release-image
        if: steps.check-changes.outputs.lockmaster == 'true' || steps.check-changes.outputs.shared == 'true'
        id: lockmaster-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          build-args: |
            SERVICE=lockmaster
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/lockmaster:latest
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/lockmaster:${{steps.versioning.outputs.version_tag }}


      - name: api-gateway-release-image
        if: steps.check-changes.outputs.api-gateway == 'true' || steps.check-changes.outputs.shared == 'true'
        id: api-gateway-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          build-args: |
            SERVICE=api-gateway
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/api-gateway:latest
            ${{ env.REGISTRY }}/${{ env.CONTAINER_NAME }}/api-gateway:${{steps.versioning.outputs.version_tag }}
